"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
class FunctionDeclTransform_1266 {}
class VariableDeclTransform_1267 {}
class NewTransform_1268 {}
class ThrowTransform_1269 {}
class LetDeclTransform_1270 {}
class ConstDeclTransform_1271 {}
class TryTransform_1272 {}
class WhileTransform_1273 {}
class IfTransform_1274 {}
class ForTransform_1275 {}
class SwitchTransform_1276 {}
class BreakTransform_1277 {}
class ContinueTransform_1278 {}
class DoTransform_1279 {}
class WithTransform_1280 {}
class DebuggerTransform_1281 {}
class SyntaxrecDeclTransform_1282 {}
class SyntaxDeclTransform_1283 {}
class SyntaxQuoteTransform_1284 {}
class ReturnStatementTransform_1285 {}
class VarBindingTransform_1286 {
  constructor(id_1288) {
    this.id = id_1288;
  }
}
class CompiletimeTransform_1287 {
  constructor(value_1289) {
    this.value = value_1289;
  }
}
exports.FunctionDeclTransform = FunctionDeclTransform_1266;
exports.VariableDeclTransform = VariableDeclTransform_1267;
exports.NewTransform = NewTransform_1268;
exports.ThrowTransform = ThrowTransform_1269;
exports.LetDeclTransform = LetDeclTransform_1270;
exports.ConstDeclTransform = ConstDeclTransform_1271;
exports.TryTransform = TryTransform_1272;
exports.WhileTransform = WhileTransform_1273;
exports.IfTransform = IfTransform_1274;
exports.ForTransform = ForTransform_1275;
exports.SwitchTransform = SwitchTransform_1276;
exports.BreakTransform = BreakTransform_1277;
exports.ContinueTransform = ContinueTransform_1278;
exports.DoTransform = DoTransform_1279;
exports.WithTransform = WithTransform_1280;
exports.DebuggerTransform = DebuggerTransform_1281;
exports.SyntaxrecDeclTransform = SyntaxrecDeclTransform_1282;
exports.SyntaxDeclTransform = SyntaxDeclTransform_1283;
exports.SyntaxQuoteTransform = SyntaxQuoteTransform_1284;
exports.ReturnStatementTransform = ReturnStatementTransform_1285;
exports.VarBindingTransform = VarBindingTransform_1286;
exports.CompiletimeTransform = CompiletimeTransform_1287;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3N3ZWV0L3RyYW5zZm9ybXMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxNQUFNLDBCQUFOLENBQWlDO0FBQ2pDLE1BQU0sMEJBQU4sQ0FBaUM7QUFDakMsTUFBTSxpQkFBTixDQUF3QjtBQUN4QixNQUFNLG1CQUFOLENBQTBCO0FBQzFCLE1BQU0scUJBQU4sQ0FBNEI7QUFDNUIsTUFBTSx1QkFBTixDQUE4QjtBQUM5QixNQUFNLGlCQUFOLENBQXdCO0FBQ3hCLE1BQU0sbUJBQU4sQ0FBMEI7QUFDMUIsTUFBTSxnQkFBTixDQUF1QjtBQUN2QixNQUFNLGlCQUFOLENBQXdCO0FBQ3hCLE1BQU0sb0JBQU4sQ0FBMkI7QUFDM0IsTUFBTSxtQkFBTixDQUEwQjtBQUMxQixNQUFNLHNCQUFOLENBQTZCO0FBQzdCLE1BQU0sZ0JBQU4sQ0FBdUI7QUFDdkIsTUFBTSxrQkFBTixDQUF5QjtBQUN6QixNQUFNLHNCQUFOLENBQTZCO0FBQzdCLE1BQU0sMkJBQU4sQ0FBa0M7QUFDbEMsTUFBTSx3QkFBTixDQUErQjtBQUMvQixNQUFNLHlCQUFOLENBQWdDO0FBQ2hDLE1BQU0sNkJBQU4sQ0FBb0M7QUFDcEMsTUFBTSx3QkFBTixDQUErQjtBQUM3QixjQUFZLE9BQVosRUFBcUI7QUFDbkIsU0FBSyxFQUFMLEdBQVUsT0FBVjtBQUNEO0FBSDRCO0FBSy9CLE1BQU0seUJBQU4sQ0FBZ0M7QUFDOUIsY0FBWSxVQUFaLEVBQXdCO0FBQ3RCLFNBQUssS0FBTCxHQUFhLFVBQWI7QUFDRDtBQUg2QjtRQUtNLHFCLEdBQTlCLDBCO1FBQzhCLHFCLEdBQTlCLDBCO1FBQ3FCLFksR0FBckIsaUI7UUFDdUIsYyxHQUF2QixtQjtRQUN5QixnQixHQUF6QixxQjtRQUMyQixrQixHQUEzQix1QjtRQUNxQixZLEdBQXJCLGlCO1FBQ3VCLGMsR0FBdkIsbUI7UUFDb0IsVyxHQUFwQixnQjtRQUNxQixZLEdBQXJCLGlCO1FBQ3dCLGUsR0FBeEIsb0I7UUFDdUIsYyxHQUF2QixtQjtRQUMwQixpQixHQUExQixzQjtRQUNvQixXLEdBQXBCLGdCO1FBQ3NCLGEsR0FBdEIsa0I7UUFDMEIsaUIsR0FBMUIsc0I7UUFDK0Isc0IsR0FBL0IsMkI7UUFDNEIsbUIsR0FBNUIsd0I7UUFDNkIsb0IsR0FBN0IseUI7UUFDaUMsd0IsR0FBakMsNkI7UUFDNEIsbUIsR0FBNUIsd0I7UUFDNkIsb0IsR0FBN0IseUIiLCJmaWxlIjoidHJhbnNmb3Jtcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImNsYXNzIEZ1bmN0aW9uRGVjbFRyYW5zZm9ybV8xMjY2IHt9XG5jbGFzcyBWYXJpYWJsZURlY2xUcmFuc2Zvcm1fMTI2NyB7fVxuY2xhc3MgTmV3VHJhbnNmb3JtXzEyNjgge31cbmNsYXNzIFRocm93VHJhbnNmb3JtXzEyNjkge31cbmNsYXNzIExldERlY2xUcmFuc2Zvcm1fMTI3MCB7fVxuY2xhc3MgQ29uc3REZWNsVHJhbnNmb3JtXzEyNzEge31cbmNsYXNzIFRyeVRyYW5zZm9ybV8xMjcyIHt9XG5jbGFzcyBXaGlsZVRyYW5zZm9ybV8xMjczIHt9XG5jbGFzcyBJZlRyYW5zZm9ybV8xMjc0IHt9XG5jbGFzcyBGb3JUcmFuc2Zvcm1fMTI3NSB7fVxuY2xhc3MgU3dpdGNoVHJhbnNmb3JtXzEyNzYge31cbmNsYXNzIEJyZWFrVHJhbnNmb3JtXzEyNzcge31cbmNsYXNzIENvbnRpbnVlVHJhbnNmb3JtXzEyNzgge31cbmNsYXNzIERvVHJhbnNmb3JtXzEyNzkge31cbmNsYXNzIFdpdGhUcmFuc2Zvcm1fMTI4MCB7fVxuY2xhc3MgRGVidWdnZXJUcmFuc2Zvcm1fMTI4MSB7fVxuY2xhc3MgU3ludGF4cmVjRGVjbFRyYW5zZm9ybV8xMjgyIHt9XG5jbGFzcyBTeW50YXhEZWNsVHJhbnNmb3JtXzEyODMge31cbmNsYXNzIFN5bnRheFF1b3RlVHJhbnNmb3JtXzEyODQge31cbmNsYXNzIFJldHVyblN0YXRlbWVudFRyYW5zZm9ybV8xMjg1IHt9XG5jbGFzcyBWYXJCaW5kaW5nVHJhbnNmb3JtXzEyODYge1xuICBjb25zdHJ1Y3RvcihpZF8xMjg4KSB7XG4gICAgdGhpcy5pZCA9IGlkXzEyODg7XG4gIH1cbn1cbmNsYXNzIENvbXBpbGV0aW1lVHJhbnNmb3JtXzEyODcge1xuICBjb25zdHJ1Y3Rvcih2YWx1ZV8xMjg5KSB7XG4gICAgdGhpcy52YWx1ZSA9IHZhbHVlXzEyODk7XG4gIH1cbn1cbmV4cG9ydCB7RnVuY3Rpb25EZWNsVHJhbnNmb3JtXzEyNjYgYXMgRnVuY3Rpb25EZWNsVHJhbnNmb3JtfTtcbmV4cG9ydCB7VmFyaWFibGVEZWNsVHJhbnNmb3JtXzEyNjcgYXMgVmFyaWFibGVEZWNsVHJhbnNmb3JtfTtcbmV4cG9ydCB7TmV3VHJhbnNmb3JtXzEyNjggYXMgTmV3VHJhbnNmb3JtfTtcbmV4cG9ydCB7VGhyb3dUcmFuc2Zvcm1fMTI2OSBhcyBUaHJvd1RyYW5zZm9ybX07XG5leHBvcnQge0xldERlY2xUcmFuc2Zvcm1fMTI3MCBhcyBMZXREZWNsVHJhbnNmb3JtfTtcbmV4cG9ydCB7Q29uc3REZWNsVHJhbnNmb3JtXzEyNzEgYXMgQ29uc3REZWNsVHJhbnNmb3JtfTtcbmV4cG9ydCB7VHJ5VHJhbnNmb3JtXzEyNzIgYXMgVHJ5VHJhbnNmb3JtfTtcbmV4cG9ydCB7V2hpbGVUcmFuc2Zvcm1fMTI3MyBhcyBXaGlsZVRyYW5zZm9ybX07XG5leHBvcnQge0lmVHJhbnNmb3JtXzEyNzQgYXMgSWZUcmFuc2Zvcm19O1xuZXhwb3J0IHtGb3JUcmFuc2Zvcm1fMTI3NSBhcyBGb3JUcmFuc2Zvcm19O1xuZXhwb3J0IHtTd2l0Y2hUcmFuc2Zvcm1fMTI3NiBhcyBTd2l0Y2hUcmFuc2Zvcm19O1xuZXhwb3J0IHtCcmVha1RyYW5zZm9ybV8xMjc3IGFzIEJyZWFrVHJhbnNmb3JtfTtcbmV4cG9ydCB7Q29udGludWVUcmFuc2Zvcm1fMTI3OCBhcyBDb250aW51ZVRyYW5zZm9ybX07XG5leHBvcnQge0RvVHJhbnNmb3JtXzEyNzkgYXMgRG9UcmFuc2Zvcm19O1xuZXhwb3J0IHtXaXRoVHJhbnNmb3JtXzEyODAgYXMgV2l0aFRyYW5zZm9ybX07XG5leHBvcnQge0RlYnVnZ2VyVHJhbnNmb3JtXzEyODEgYXMgRGVidWdnZXJUcmFuc2Zvcm19O1xuZXhwb3J0IHtTeW50YXhyZWNEZWNsVHJhbnNmb3JtXzEyODIgYXMgU3ludGF4cmVjRGVjbFRyYW5zZm9ybX07XG5leHBvcnQge1N5bnRheERlY2xUcmFuc2Zvcm1fMTI4MyBhcyBTeW50YXhEZWNsVHJhbnNmb3JtfTtcbmV4cG9ydCB7U3ludGF4UXVvdGVUcmFuc2Zvcm1fMTI4NCBhcyBTeW50YXhRdW90ZVRyYW5zZm9ybX07XG5leHBvcnQge1JldHVyblN0YXRlbWVudFRyYW5zZm9ybV8xMjg1IGFzIFJldHVyblN0YXRlbWVudFRyYW5zZm9ybX07XG5leHBvcnQge1ZhckJpbmRpbmdUcmFuc2Zvcm1fMTI4NiBhcyBWYXJCaW5kaW5nVHJhbnNmb3JtfTtcbmV4cG9ydCB7Q29tcGlsZXRpbWVUcmFuc2Zvcm1fMTI4NyBhcyBDb21waWxldGltZVRyYW5zZm9ybX0iXX0=