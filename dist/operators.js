"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
const unaryOperators_512 = { "+": true, "-": true, "!": true, "~": true, "++": true, "--": true, typeof: true, void: true, delete: true };
const binaryOperatorPrecedence_513 = { "*": 13, "/": 13, "%": 13, "+": 12, "-": 12, ">>": 11, "<<": 11, ">>>": 11, "<": 10, "<=": 10, ">": 10, ">=": 10, in: 10, instanceof: 10, "==": 9, "!=": 9, "===": 9, "!==": 9, "&": 8, "^": 7, "|": 6, "&&": 5, "||": 4 };
var operatorAssoc_514 = { "*": "left", "/": "left", "%": "left", "+": "left", "-": "left", ">>": "left", "<<": "left", ">>>": "left", "<": "left", "<=": "left", ">": "left", ">=": "left", in: "left", instanceof: "left", "==": "left", "!=": "left", "===": "left", "!==": "left", "&": "left", "^": "left", "|": "left", "&&": "left", "||": "left" };
function operatorLt_515(left_520, right_521, assoc_522) {
  if (assoc_522 === "left") {
    return left_520 < right_521;
  } else {
    return left_520 <= right_521;
  }
}
function getOperatorPrec_516(op_523) {
  return binaryOperatorPrecedence_513[op_523];
}
function getOperatorAssoc_517(op_524) {
  return operatorAssoc_514[op_524];
}
function isUnaryOperator_518(op_525) {
  return (op_525.match("punctuator") || op_525.match("identifier") || op_525.match("keyword")) && unaryOperators_512.hasOwnProperty(op_525.val());
}
function isOperator_519(op_526) {
  if (op_526.match("punctuator") || op_526.match("identifier") || op_526.match("keyword")) {
    return binaryOperatorPrecedence_513.hasOwnProperty(op_526) || unaryOperators_512.hasOwnProperty(op_526.val());
  }
  return false;
}
exports.operatorLt = operatorLt_515;
exports.getOperatorPrec = getOperatorPrec_516;
exports.getOperatorAssoc = getOperatorAssoc_517;
exports.isUnaryOperator = isUnaryOperator_518;
exports.isOperator = isOperator_519;
//# sourceMappingURL=data:application/json;base64,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QixjO1FBQ3VCLGUsR0FBdkIsbUI7UUFDd0IsZ0IsR0FBeEIsb0I7UUFDdUIsZSxHQUF2QixtQjtRQUNrQixVLEdBQWxCLGMiLCJmaWxlIjoib3BlcmF0b3JzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgdW5hcnlPcGVyYXRvcnNfNTEyID0ge1wiK1wiOiB0cnVlLCBcIi1cIjogdHJ1ZSwgXCIhXCI6IHRydWUsIFwiflwiOiB0cnVlLCBcIisrXCI6IHRydWUsIFwiLS1cIjogdHJ1ZSwgdHlwZW9mOiB0cnVlLCB2b2lkOiB0cnVlLCBkZWxldGU6IHRydWV9O1xuY29uc3QgYmluYXJ5T3BlcmF0b3JQcmVjZWRlbmNlXzUxMyA9IHtcIipcIjogMTMsIFwiL1wiOiAxMywgXCIlXCI6IDEzLCBcIitcIjogMTIsIFwiLVwiOiAxMiwgXCI+PlwiOiAxMSwgXCI8PFwiOiAxMSwgXCI+Pj5cIjogMTEsIFwiPFwiOiAxMCwgXCI8PVwiOiAxMCwgXCI+XCI6IDEwLCBcIj49XCI6IDEwLCBpbjogMTAsIGluc3RhbmNlb2Y6IDEwLCBcIj09XCI6IDksIFwiIT1cIjogOSwgXCI9PT1cIjogOSwgXCIhPT1cIjogOSwgXCImXCI6IDgsIFwiXlwiOiA3LCBcInxcIjogNiwgXCImJlwiOiA1LCBcInx8XCI6IDR9O1xudmFyIG9wZXJhdG9yQXNzb2NfNTE0ID0ge1wiKlwiOiBcImxlZnRcIiwgXCIvXCI6IFwibGVmdFwiLCBcIiVcIjogXCJsZWZ0XCIsIFwiK1wiOiBcImxlZnRcIiwgXCItXCI6IFwibGVmdFwiLCBcIj4+XCI6IFwibGVmdFwiLCBcIjw8XCI6IFwibGVmdFwiLCBcIj4+PlwiOiBcImxlZnRcIiwgXCI8XCI6IFwibGVmdFwiLCBcIjw9XCI6IFwibGVmdFwiLCBcIj5cIjogXCJsZWZ0XCIsIFwiPj1cIjogXCJsZWZ0XCIsIGluOiBcImxlZnRcIiwgaW5zdGFuY2VvZjogXCJsZWZ0XCIsIFwiPT1cIjogXCJsZWZ0XCIsIFwiIT1cIjogXCJsZWZ0XCIsIFwiPT09XCI6IFwibGVmdFwiLCBcIiE9PVwiOiBcImxlZnRcIiwgXCImXCI6IFwibGVmdFwiLCBcIl5cIjogXCJsZWZ0XCIsIFwifFwiOiBcImxlZnRcIiwgXCImJlwiOiBcImxlZnRcIiwgXCJ8fFwiOiBcImxlZnRcIn07XG5mdW5jdGlvbiBvcGVyYXRvckx0XzUxNShsZWZ0XzUyMCwgcmlnaHRfNTIxLCBhc3NvY181MjIpIHtcbiAgaWYgKGFzc29jXzUyMiA9PT0gXCJsZWZ0XCIpIHtcbiAgICByZXR1cm4gbGVmdF81MjAgPCByaWdodF81MjE7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIGxlZnRfNTIwIDw9IHJpZ2h0XzUyMTtcbiAgfVxufVxuZnVuY3Rpb24gZ2V0T3BlcmF0b3JQcmVjXzUxNihvcF81MjMpIHtcbiAgcmV0dXJuIGJpbmFyeU9wZXJhdG9yUHJlY2VkZW5jZV81MTNbb3BfNTIzXTtcbn1cbmZ1bmN0aW9uIGdldE9wZXJhdG9yQXNzb2NfNTE3KG9wXzUyNCkge1xuICByZXR1cm4gb3BlcmF0b3JBc3NvY181MTRbb3BfNTI0XTtcbn1cbmZ1bmN0aW9uIGlzVW5hcnlPcGVyYXRvcl81MTgob3BfNTI1KSB7XG4gIHJldHVybiAob3BfNTI1Lm1hdGNoKFwicHVuY3R1YXRvclwiKSB8fCBvcF81MjUubWF0Y2goXCJpZGVudGlmaWVyXCIpIHx8IG9wXzUyNS5tYXRjaChcImtleXdvcmRcIikpICYmIHVuYXJ5T3BlcmF0b3JzXzUxMi5oYXNPd25Qcm9wZXJ0eShvcF81MjUudmFsKCkpO1xufVxuZnVuY3Rpb24gaXNPcGVyYXRvcl81MTkob3BfNTI2KSB7XG4gIGlmIChvcF81MjYubWF0Y2goXCJwdW5jdHVhdG9yXCIpIHx8IG9wXzUyNi5tYXRjaChcImlkZW50aWZpZXJcIikgfHwgb3BfNTI2Lm1hdGNoKFwia2V5d29yZFwiKSkge1xuICAgIHJldHVybiBiaW5hcnlPcGVyYXRvclByZWNlZGVuY2VfNTEzLmhhc093blByb3BlcnR5KG9wXzUyNikgfHwgdW5hcnlPcGVyYXRvcnNfNTEyLmhhc093blByb3BlcnR5KG9wXzUyNi52YWwoKSk7XG4gIH1cbiAgcmV0dXJuIGZhbHNlO1xufVxuZXhwb3J0IHtvcGVyYXRvckx0XzUxNSBhcyBvcGVyYXRvckx0fTtcbmV4cG9ydCB7Z2V0T3BlcmF0b3JQcmVjXzUxNiBhcyBnZXRPcGVyYXRvclByZWN9O1xuZXhwb3J0IHtnZXRPcGVyYXRvckFzc29jXzUxNyBhcyBnZXRPcGVyYXRvckFzc29jfTtcbmV4cG9ydCB7aXNVbmFyeU9wZXJhdG9yXzUxOCBhcyBpc1VuYXJ5T3BlcmF0b3J9O1xuZXhwb3J0IHtpc09wZXJhdG9yXzUxOSBhcyBpc09wZXJhdG9yfSJdfQ==