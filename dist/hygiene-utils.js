"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.collectBindings = exports.CollectBindingSyntax = undefined;

var _symbol = require("./symbol");

var _transforms = require("./transforms");

var _errors = require("./errors");

var _terms = require("./terms");

var _terms2 = _interopRequireDefault(_terms);

var _immutable = require("immutable");

var _astDispatcher = require("./ast-dispatcher");

var _astDispatcher2 = _interopRequireDefault(_astDispatcher);

var _ramda = require("ramda");

var _ = _interopRequireWildcard(_ramda);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

class CollectBindingSyntax_328 extends _astDispatcher2.default {
  constructor() {
    super("collect", true);
    this.names = (0, _immutable.List)();
  }
  collect(term_330) {
    return this.dispatch(term_330);
  }
  collectBindingIdentifier(term_331) {
    return this.names.concat(term_331.name);
  }
  collectBindingPropertyIdentifier(term_332) {
    return this.collect(term_332.binding);
  }
  collectBindingPropertyProperty(term_333) {
    return this.collect(term_333.binding);
  }
  collectArrayBinding(term_334) {
    let restElement_335 = null;
    if (term_334.restElement != null) {
      restElement_335 = this.collect(term_334.restElement);
    }
    return this.names.concat(restElement_335).concat(term_334.elements.filter(el_336 => el_336 != null).flatMap(el_337 => this.collect(el_337)));
  }
  collectObjectBinding(term_338) {
    return (0, _immutable.List)();
  }
}
function collectBindings_329(term_339) {
  return new CollectBindingSyntax_328().collect(term_339);
}
exports.CollectBindingSyntax = CollectBindingSyntax_328;
exports.collectBindings = collectBindings_329;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3N3ZWV0L2h5Z2llbmUtdXRpbHMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOzs7O0FBQ0E7O0FBQ0E7Ozs7QUFDQTs7SUFBYSxDOzs7Ozs7QUFDYixNQUFNLHdCQUFOLGlDQUFxRDtBQUNuRCxnQkFBYztBQUNaLFVBQU0sU0FBTixFQUFpQixJQUFqQjtBQUNBLFNBQUssS0FBTCxHQUFhLHNCQUFiO0FBQ0Q7QUFDRCxVQUFRLFFBQVIsRUFBa0I7QUFDaEIsV0FBTyxLQUFLLFFBQUwsQ0FBYyxRQUFkLENBQVA7QUFDRDtBQUNELDJCQUF5QixRQUF6QixFQUFtQztBQUNqQyxXQUFPLEtBQUssS0FBTCxDQUFXLE1BQVgsQ0FBa0IsU0FBUyxJQUEzQixDQUFQO0FBQ0Q7QUFDRCxtQ0FBaUMsUUFBakMsRUFBMkM7QUFDekMsV0FBTyxLQUFLLE9BQUwsQ0FBYSxTQUFTLE9BQXRCLENBQVA7QUFDRDtBQUNELGlDQUErQixRQUEvQixFQUF5QztBQUN2QyxXQUFPLEtBQUssT0FBTCxDQUFhLFNBQVMsT0FBdEIsQ0FBUDtBQUNEO0FBQ0Qsc0JBQW9CLFFBQXBCLEVBQThCO0FBQzVCLFFBQUksa0JBQWtCLElBQXRCO0FBQ0EsUUFBSSxTQUFTLFdBQVQsSUFBd0IsSUFBNUIsRUFBa0M7QUFDaEMsd0JBQWtCLEtBQUssT0FBTCxDQUFhLFNBQVMsV0FBdEIsQ0FBbEI7QUFDRDtBQUNELFdBQU8sS0FBSyxLQUFMLENBQVcsTUFBWCxDQUFrQixlQUFsQixFQUFtQyxNQUFuQyxDQUEwQyxTQUFTLFFBQVQsQ0FBa0IsTUFBbEIsQ0FBeUIsVUFBVSxVQUFVLElBQTdDLEVBQW1ELE9BQW5ELENBQTJELFVBQVUsS0FBSyxPQUFMLENBQWEsTUFBYixDQUFyRSxDQUExQyxDQUFQO0FBQ0Q7QUFDRCx1QkFBcUIsUUFBckIsRUFBK0I7QUFDN0IsV0FBTyxzQkFBUDtBQUNEO0FBMUJrRDtBQTRCckQsU0FBUyxtQkFBVCxDQUE2QixRQUE3QixFQUF1QztBQUNyQyxTQUFRLElBQUksd0JBQUosRUFBRCxDQUErQixPQUEvQixDQUF1QyxRQUF2QyxDQUFQO0FBQ0Q7UUFDbUMsb0IsR0FBNUIsd0I7UUFDdUIsZSxHQUF2QixtQiIsImZpbGUiOiJoeWdpZW5lLXV0aWxzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtnZW5zeW19IGZyb20gXCIuL3N5bWJvbFwiO1xuaW1wb3J0IHtWYXJCaW5kaW5nVHJhbnNmb3JtLCBDb21waWxldGltZVRyYW5zZm9ybX0gZnJvbSBcIi4vdHJhbnNmb3Jtc1wiO1xuaW1wb3J0IHtleHBlY3QsIGFzc2VydH0gZnJvbSBcIi4vZXJyb3JzXCI7XG5pbXBvcnQgVGVybSwge2lzRU9GLCBpc0JpbmRpbmdJZGVudGlmaWVyLCBpc0JpbmRpbmdQcm9wZXJ0eVByb3BlcnR5LCBpc0JpbmRpbmdQcm9wZXJ0eUlkZW50aWZpZXIsIGlzT2JqZWN0QmluZGluZywgaXNBcnJheUJpbmRpbmcsIGlzRnVuY3Rpb25EZWNsYXJhdGlvbiwgaXNGdW5jdGlvbkV4cHJlc3Npb24sIGlzRnVuY3Rpb25UZXJtLCBpc0Z1bmN0aW9uV2l0aE5hbWUsIGlzU3ludGF4RGVjbGFyYXRpb24sIGlzU3ludGF4cmVjRGVjbGFyYXRpb24sIGlzVmFyaWFibGVEZWNsYXJhdGlvbiwgaXNWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50LCBpc0ltcG9ydCwgaXNFeHBvcnQsIGlzUHJhZ21hLCBpc0V4cG9ydFN5bnRheH0gZnJvbSBcIi4vdGVybXNcIjtcbmltcG9ydCB7TGlzdH0gZnJvbSBcImltbXV0YWJsZVwiO1xuaW1wb3J0IEFTVERpc3BhdGNoZXIgZnJvbSBcIi4vYXN0LWRpc3BhdGNoZXJcIjtcbmltcG9ydCAgKiBhcyBfIGZyb20gXCJyYW1kYVwiO1xuY2xhc3MgQ29sbGVjdEJpbmRpbmdTeW50YXhfMzI4IGV4dGVuZHMgQVNURGlzcGF0Y2hlciB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKFwiY29sbGVjdFwiLCB0cnVlKTtcbiAgICB0aGlzLm5hbWVzID0gTGlzdCgpO1xuICB9XG4gIGNvbGxlY3QodGVybV8zMzApIHtcbiAgICByZXR1cm4gdGhpcy5kaXNwYXRjaCh0ZXJtXzMzMCk7XG4gIH1cbiAgY29sbGVjdEJpbmRpbmdJZGVudGlmaWVyKHRlcm1fMzMxKSB7XG4gICAgcmV0dXJuIHRoaXMubmFtZXMuY29uY2F0KHRlcm1fMzMxLm5hbWUpO1xuICB9XG4gIGNvbGxlY3RCaW5kaW5nUHJvcGVydHlJZGVudGlmaWVyKHRlcm1fMzMyKSB7XG4gICAgcmV0dXJuIHRoaXMuY29sbGVjdCh0ZXJtXzMzMi5iaW5kaW5nKTtcbiAgfVxuICBjb2xsZWN0QmluZGluZ1Byb3BlcnR5UHJvcGVydHkodGVybV8zMzMpIHtcbiAgICByZXR1cm4gdGhpcy5jb2xsZWN0KHRlcm1fMzMzLmJpbmRpbmcpO1xuICB9XG4gIGNvbGxlY3RBcnJheUJpbmRpbmcodGVybV8zMzQpIHtcbiAgICBsZXQgcmVzdEVsZW1lbnRfMzM1ID0gbnVsbDtcbiAgICBpZiAodGVybV8zMzQucmVzdEVsZW1lbnQgIT0gbnVsbCkge1xuICAgICAgcmVzdEVsZW1lbnRfMzM1ID0gdGhpcy5jb2xsZWN0KHRlcm1fMzM0LnJlc3RFbGVtZW50KTtcbiAgICB9XG4gICAgcmV0dXJuIHRoaXMubmFtZXMuY29uY2F0KHJlc3RFbGVtZW50XzMzNSkuY29uY2F0KHRlcm1fMzM0LmVsZW1lbnRzLmZpbHRlcihlbF8zMzYgPT4gZWxfMzM2ICE9IG51bGwpLmZsYXRNYXAoZWxfMzM3ID0+IHRoaXMuY29sbGVjdChlbF8zMzcpKSk7XG4gIH1cbiAgY29sbGVjdE9iamVjdEJpbmRpbmcodGVybV8zMzgpIHtcbiAgICByZXR1cm4gTGlzdCgpO1xuICB9XG59XG5mdW5jdGlvbiBjb2xsZWN0QmluZGluZ3NfMzI5KHRlcm1fMzM5KSB7XG4gIHJldHVybiAobmV3IENvbGxlY3RCaW5kaW5nU3ludGF4XzMyOCkuY29sbGVjdCh0ZXJtXzMzOSk7XG59XG5leHBvcnQge0NvbGxlY3RCaW5kaW5nU3ludGF4XzMyOCBhcyBDb2xsZWN0QmluZGluZ1N5bnRheH07XG5leHBvcnQge2NvbGxlY3RCaW5kaW5nc18zMjkgYXMgY29sbGVjdEJpbmRpbmdzfSJdfQ==